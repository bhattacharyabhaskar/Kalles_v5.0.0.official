<script>
async function handleAddToCart(e) {
  e.preventDefault();
  console.log("üõí Add to Cart triggered...");

  const submitBtn = e.currentTarget;
  submitBtn.disabled = true;
  submitBtn.innerText = 'Adding...';

  // 1. Try to get parent variant ID safely
  const variantInput = document.querySelector('form[action="/cart/add"] input[name="id"], input[name="variant"], input[name="variant_id"]');
  const parentVariantId = variantInput?.value || window?.product?.selected_or_first_available_variant?.id;

  if (!parentVariantId) {
    alert("Variant not found");
    console.warn("‚ùå Could not determine parentVariantId", { variantInput, windowProduct: window.product });
    submitBtn.disabled = false;
    submitBtn.innerText = 'Add to Cart';
    return;
  }

  console.log("‚úîÔ∏è Parent Variant ID:", parentVariantId);

  // 2. Collect checked add-ons
  const addonCheckboxes = Array.from(document.querySelectorAll('.addon-checkbox:checked'));
  const addonItems = addonCheckboxes.map(cb => {
    const variantId = cb.getAttribute('data-variant-id');
    return variantId ? {
      id: parseInt(variantId),
      quantity: 1,
      properties: {
        "Linked to Saree": parentVariantId
      }
    } : null;
  }).filter(Boolean);

  console.log("‚ûï Addon Items:", addonItems);

  // 3. Build final items array
  const items = [
    { id: parseInt(parentVariantId), quantity: 1 },
    ...addonItems
  ];

  console.log("üì¶ Final items array:", items);

  try {
    const res = await fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ items })
    });

    if (!res.ok) throw new Error("‚ùå Failed to add to cart");

    console.log("‚úÖ Items successfully added");

    // 4. Refresh cart and open drawer
    document.dispatchEvent(new CustomEvent("cart:refresh")); // for custom Kalles logic
    document.dispatchEvent(new CustomEvent("hdt:open-drawer", { detail: { id: "cart" } }));

  } catch (err) {
    console.error("‚ùå Add to cart failed", err);
    alert("Something went wrong. Please try again.");
  } finally {
    submitBtn.disabled = false;
    submitBtn.innerText = 'Add to Cart';
  }
}

// Attach to button if not using Liquid 'onclick'
document.addEventListener('DOMContentLoaded', () => {
  const btn = document.querySelector('button[name="add"]');
  if (btn) {
    btn.addEventListener('click', handleAddToCart);
    console.log("‚úÖ Bound custom handleAddToCart to button");
  } else {
    console.warn("‚ùå No Add to Cart button found");
  }
});
</script>
