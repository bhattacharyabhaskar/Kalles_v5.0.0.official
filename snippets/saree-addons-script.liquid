<script>
async function handleAddToCart(e) {
      console.log("INITIALIZE"));

  e.preventDefault();

  const submitBtn = e.currentTarget;
  submitBtn.disabled = true;
  submitBtn.innerText = 'Adding...';

  const parentVariantId = window?.product?.selected_or_first_available_variant?.id?.toString();
  if (!parentVariantId) {
    alert("Variant not found");
    return;
  }

  // Find checked add-ons
  const addonItems = Array.from(document.querySelectorAll('.addon-checkbox:checked'))
    .map(cb => {
      const variantId = cb.getAttribute('data-variant-id');
      return variantId ? {
        id: parseInt(variantId),
        quantity: 1,
        properties: {
          "Linked to Saree": parentVariantId
        }
      } : null;
    })
    .filter(Boolean);

  // Main product
  const mainItem = {
    id: parseInt(parentVariantId),
    quantity: 1
  };

  const items = [mainItem, ...addonItems];

  try {
console.log("üß© Variant IDs being added:", checkedAddons);
console.log("üì¶ Final itemsToAdd array:", itemsToAdd);    const res = await fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ items })
    });

    if (!res.ok) throw new Error("Failed to add to cart");

    document.dispatchEvent(new CustomEvent("cart:refresh")); // will trigger drawer
  } catch (err) {
    console.error("‚ùå Add to cart failed", err);
    alert("Something went wrong. Please try again.");
  } finally {
    submitBtn.disabled = false;
    submitBtn.innerText = 'Add to Cart';
  }
}
</script>
