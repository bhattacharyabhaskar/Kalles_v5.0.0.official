<script>
async function handleAddToCart(e) {
  e.preventDefault();

  console.log("üõí Add to Cart triggered...");

  const submitBtn = e.currentTarget;
  submitBtn.disabled = true;
  submitBtn.querySelector(".hdt-btn-atc_text").innerText = 'Adding...';

  const parentVariantId = window?.product?.selected_or_first_available_variant?.id?.toString();
  if (!parentVariantId) {
    alert("Variant not found");
    return;
  }

  console.log("‚úîÔ∏è Parent Variant ID:", parentVariantId);

  // Find checked add-ons
  const addonItems = Array.from(document.querySelectorAll('.addon-checkbox:checked'))
    .map(cb => {
      const variantId = cb.getAttribute('data-variant-id');
      return variantId ? {
        id: parseInt(variantId),
        quantity: 1,
        properties: {
          "Linked to Saree": parentVariantId
        }
      } : null;
    })
    .filter(Boolean);

  console.log("‚ûï Addon Items:", addonItems);

  // Main product
  const mainItem = {
    id: parseInt(parentVariantId),
    quantity: 1
  };

  const itemsToAdd = [mainItem, ...addonItems];

  console.log("üì¶ Final items array:", itemsToAdd);

  try {
    const res = await fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ items: itemsToAdd })
    });

    if (!res.ok) throw new Error("Failed to add to cart");

    console.log("‚úÖ Items successfully added");

    // üîÑ Refresh cart data
    document.dispatchEvent(new CustomEvent("hdt:cart:reload"));

    // üß≤ Open the cart drawer after slight delay
    setTimeout(() => {
      document.dispatchEvent(new CustomEvent("hdt:open-drawer", {
        detail: { id: "cart" }
      }));
    }, 300);

  } catch (err) {
    console.error("‚ùå Add to cart failed", err);
    alert("Something went wrong. Please try again.");
  } finally {
    submitBtn.disabled = false;
    submitBtn.querySelector(".hdt-btn-atc_text").innerText = 'Add to cart';
  }
}

// ‚úÖ Attach to the button after DOM loads
document.addEventListener("DOMContentLoaded", () => {
  const atcBtn = document.querySelector('button[name="add"]');
  if (atcBtn) {
    atcBtn.addEventListener('click', handleAddToCart);
    console.log("‚úÖ Bound custom handleAddToCart to button");
  } else {
    console.warn("‚ùå ATC button not found to bind");
  }
});
</script>
