<script>
document.addEventListener("DOMContentLoaded", function () {
  const form = document.querySelector('form[action="/cart/add"]');
  const atcButton = form?.querySelector('button[type="submit"]');

  if (!form || !atcButton) {
    console.warn("❌ Main form or Add to Cart button not found");
    return;
  }

  // Remove any old hidden addon inputs before a new submission
  function clearPreviousAddonInputs() {
    const oldInputs = form.querySelectorAll('.addon-hidden-input');
    oldInputs.forEach((input) => input.remove());
  }

  // Inject selected add-ons into form before submission
  function injectAddonsIntoForm() {
    const checkedAddons = document.querySelectorAll('.addon-checkbox:checked');
    console.log(`📦 Add-ons selected: ${checkedAddons.length}`);
    clearPreviousAddonInputs();

    checkedAddons.forEach((checkbox, index) => {
      const variantId = checkbox.dataset.variantId;

      if (!variantId) {
        console.warn(`⚠️ Missing variant ID on addon checkbox #${index}`);
        return;
      }

      const inputId = document.createElement("input");
      inputId.type = "hidden";
      inputId.name = "items[][id]";
      inputId.value = variantId;
      inputId.classList.add("addon-hidden-input");
      form.appendChild(inputId);

      const inputQty = document.createElement("input");
      inputQty.type = "hidden";
      inputQty.name = "items[][quantity]";
      inputQty.value = 1;
      inputQty.classList.add("addon-hidden-input");
      form.appendChild(inputQty);

      console.log(`✅ Injected addon variant ${variantId}`);
    });

    if (checkedAddons.length > 0) {
      console.log("✅ Properties injected, form will POST normally");
    }
  }

  // Attach listener to inject add-ons before the form submission
  form.addEventListener("submit", function (e) {
    injectAddonsIntoForm();
  });
});
</script>
