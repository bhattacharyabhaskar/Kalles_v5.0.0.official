<script>
document.addEventListener("DOMContentLoaded", function () {
  const atcForm = document.querySelector('form[action="/cart/add"]');
  const atcButton = atcForm?.querySelector('button[type="submit"]');
  const atcTextSpan = atcButton?.querySelector('.hdt-btn-atc_text');
  const floatingBtnWrapper = document.getElementById("floating-atc-wrapper");
  const floatingBtn = document.getElementById("floating-atc-button");
  const floatingText = floatingBtn?.querySelector('.hdt-btn-atc_text');

  const defaultBtnText = atcTextSpan?.textContent.trim() || "Add to Cart";
  const withAddonsText = "Add to Cart with Add-ons";
  const defaultBg = atcButton?.style.backgroundColor || "";
  const addonBg = "#8A1253";

  if (!atcForm || !atcButton || !floatingBtn) return;

  // 🔁 Keep both buttons in sync
  function updateButtonState() {
    const anyChecked = document.querySelectorAll(".addon-checkbox:checked").length > 0;
    const text = anyChecked ? withAddonsText : defaultBtnText;

    [atcTextSpan, floatingText].forEach(el => { if (el) el.textContent = text; });
    [atcButton, floatingBtn].forEach(btn => {
      btn.style.backgroundColor = anyChecked ? addonBg : "";
      btn.style.color = anyChecked ? "#fff" : "";
    });
  }

  document.querySelectorAll(".addon-checkbox").forEach(cb => {
    cb.addEventListener("change", updateButtonState);
  });

  // 📦 Scroll detection for floating button
  function handleScroll() {
    const rect = atcButton.getBoundingClientRect();
    const fullyVisible = rect.top >= 0 && rect.bottom <= window.innerHeight;

    if (!fullyVisible && window.innerWidth < 768) {
      floatingBtnWrapper.style.display = "block";
    } else {
      floatingBtnWrapper.style.display = "none";
    }
  }

  document.addEventListener("scroll", handleScroll, { passive: true });
  window.addEventListener("resize", handleScroll);

  // 🖱️ Clicking floating = trigger main button
  floatingBtn.addEventListener("click", function (e) {
    e.preventDefault();
    atcButton.click();
  });

  // 🖱️ Inject Add-ons before submitting
  atcForm.addEventListener("submit", async function (e) {
    e.preventDefault();

    const parentVariantId =
      window.product?.selected_or_first_available_variant?.id ||
      window.meta?.product?.variants?.[0]?.id ||
      ShopifyAnalytics?.meta?.selectedVariantId;

    if (!parentVariantId) return;

    const cart = await fetch('/cart.js').then(res => res.json());
    const updates = {};
    let hadRemovals = false;

    cart.items.forEach(item => {
      const linked = item.properties?.['Linked to Saree'];
      const match = item.variant_id == parentVariantId || linked == parentVariantId;
      if (match) {
        updates[item.key] = 0;
        hadRemovals = true;
      }
    });

    if (Object.keys(updates).length > 0) {
      await fetch('/cart/update.js', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ updates })
      });
      await new Promise(res => setTimeout(res, 300));
    }

    atcForm.querySelectorAll(".addon-dynamic").forEach(el => el.remove());
    document.querySelectorAll(".addon-checkbox:checked").forEach(cb => {
      const vid = cb.dataset.variantId;
      if (!vid) return;

      ["id", "quantity", "properties[Linked to Saree]"].forEach((name, i) => {
        const input = document.createElement("input");
        input.type = "hidden";
        input.name = `items[][${name}]`;
        input.value = i === 0 ? vid : i === 1 ? "1" : parentVariantId;
        input.classList.add("addon-dynamic");
        atcForm.appendChild(input);
      });
    });

    // Add main item last (shows first in cart)
    const parentIdInput = atcForm.querySelector('input[name="id"]');
    const parentQtyInput = atcForm.querySelector('input[name="quantity"]');
    if (parentIdInput) {
      const id = parentIdInput.value;
      const qty = parentQtyInput?.value || "1";
      formData = new FormData();
      document.querySelectorAll(".addon-dynamic").forEach(i => formData.append(i.name, i.value));
      formData.append("items[][id]", id);
      formData.append("items[][quantity]", qty);

      const res = await fetch('/cart/add.js', {
        method: 'POST',
        body: formData,
        headers: { 'Accept': 'application/json' }
      });

      if (hadRemovals) window.location.href = "/cart";
    }
  });

  atcButton.addEventListener("click", () => {
    const parentVariantId =
      window.product?.selected_or_first_available_variant?.id ||
      window.meta?.product?.variants?.[0]?.id ||
      ShopifyAnalytics?.meta?.selectedVariantId;

    if (!parentVariantId) return;
    atcForm.querySelectorAll(".addon-dynamic").forEach(el => el.remove());

    document.querySelectorAll(".addon-checkbox:checked").forEach(cb => {
      const vid = cb.dataset.variantId;
      if (!vid) return;

      ["id", "quantity", "properties[Linked to Saree]"].forEach((name, i) => {
        const input = document.createElement("input");
        input.type = "hidden";
        input.name = `items[][${name}]`;
        input.value = i === 0 ? vid : i === 1 ? "1" : parentVariantId;
        input.classList.add("addon-dynamic");
        atcForm.appendChild(input);
      });
    });
  });

  // Initial state check
  updateButtonState();
});

</script>
